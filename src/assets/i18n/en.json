{
  "header": {
    "developer": "Developer",
    "findOutMore": "Find Out More"
  },
  "about": {
    "aboutMe": "About me",
    "text1": "I have been creating websites since my youth and have gained experience with HTML, CSS, JavaScript and PHP.",
    "text2": "In 2019, I laid the foundation for a professional career in web and mobile app development through targeted online courses, specializing in Angular and Ionic.",
    "text3": "In the course of my professional career, I have continuously expanded my knowledge and also learned backend programming with the Node.js framework Nest.js, which I use in various projects.",
    "text4": "and",
    "text5": "Since then, I have been working as a freelancer and supporting various companies. My focus is on the development and further development of complex websites and mobile applications.",
    "text6": "German is my native language. I am also fluent in English and have advanced knowledge of Croatian.",
    "text7": "I am married and the proud father of one child.",
    "mySkills": "My Skills",
    "curriculumVitae": "curriculum vitae",
    "downloadCV": "Download my curriculum vitae here"
  },
  "skills": {
    "headline": "Programming languages & Tools",
    "workplace": "My workplace in my home-office"
  },
  "portfolio": {
    "contact": "Contact",
    "vocabularyTrainer": {
      "text1": "Web App for learning Croatian language. Made with Angular.",
      "text2": "Android App for learning Croatian language. Made with Angular and Ionic.",
      "sourceCode": "Source code"
    },
    "catchCups": {
      "text1": "On behalf of the company",
      "text2": "I worked on a mobile app that evaluates measurement data from an irrigation system for lawns. The app was made with Angular and Ionic."
    },
    "webaro": {
      "text1": "For the company",
      "text2": ", I worked on the further development of a web app for the efficient planning and evaluation of drone data in the agricultural sector. Realized with Angular, on behalf of"
    },
    "hippo": {
      "text1": "For the company",
      "text2": ", I developed a web app for the efficient planning and evaluation of show jumping and riding tournaments. Realized with Angular. On behalf of"
    },
    "solakon": {
      "text1": "On behalf of the company",
      "text2": "I worked on a mobile app that enables the integration of balcony power plants into the home energy network. The app was created with Angular and Ionic."
    }
  },
  "contact": {
    "headline": "Let's Get In Touch!",
    "text1": "Ready to start your next project with me?",
    "text2": "Send me a message!",
    "firstName": "First name",
    "lastName": "Last name",
    "message": "Message",
    "send": "Send",
    "sending": "Sending...",
    "toast": {
      "success": {
        "headline": "All right!",
        "text": "Your message was sent!"
      },
      "error": "An error has occurred, message was not sent!"
    }
  },
  "footer": {
    "visitMe": "Visit me on"
  },
  "sidebar": {
    "home": "Home",
    "aboutMe": "About me",
    "skills": "Skills",
    "contact": "Contact"
  },
  "gimmicks": {
    "differentLanguages": "Different languages",
    "menu": {
      "overview": "Overview",
      "map": "Map",
      "calendar": "Calendar",
      "guestbook": "Guestbook",
      "charts": "Charts",
      "jokes": "Jokes",
      "games": "Games",
      "weather": "Weather"
    },
    "overview": {
      "header1": "So far I have created enterprise applications that can only be accessed with a login and password. That's why you'll find",
      "header2": "that demonstrate my skills.",
      "header3": " gimmicks ",
      "elements": "Elements",
      "searchTypeahead": "Search with typeahead",
      "table": "Table with sorting, filtering and pagination",
      "resizable": "Resizable element (on small screens)",
      "scratchCard": "Scratch card",
      "youtubePlayer": "Embedded Youtube player",
      "editor": "Embedded richtext editor",
      "open": "Open",
      "charts": "Charts",
      "fileUpload": "File upload",
      "print": "Printing",
      "imageManipulation": "Image manipulation",
      "sourceCode": "Source code of this website on GitHub",
      "fileStorage": "File Storage"
    },
    "map": {
      "search": "Search a city...",
      "Baden-Württemberg": "Baden-Württemberg",
      "Bayern": "Bavaria",
      "Berlin": "Berlin",
      "Brandenburg": "Brandenburg",
      "Bremen": "Bremen",
      "Hamburg": "Hamburg",
      "Hessen": "Hesse",
      "Mecklenburg-Vorpommern": "Mecklenburg-Western Pomerania",
      "Niedersachsen": "Lower Saxony",
      "Nordrhein-Westfalen": "North Rhine-Westphalia",
      "Rheinland-Pfalz": "Rhineland-Palatinate",
      "Saarland": "Saarland",
      "Sachsen": "Saxony",
      "Sachsen-Anhalt": "Saxony-Anhalt",
      "Schleswig-Holstein": "Schleswig-Holstein",
      "Thüringen": "Thuringia",
      "cities1": "Cities from",
      "cities2": "to",
      "cities3": "Residents",
      "rang": "Rank",
      "population": "Residents",
      "federalState": "Federal state",
      "cityInfo": "City info",
      "noFunctions": "Map is too small for functions. Pull the map a little bigger!"
    },
    "calendar": {
      "months": {
        "january": "January",
        "february": "February",
        "march": "March",
        "april": "April",
        "may": "May",
        "june": "June",
        "july": "July",
        "august": "August",
        "september": "September",
        "october": "October",
        "november": "November",
        "december": "December"
      },
      "holidays": {
        "NEUJAHRSTAG": "NEW YEAR",
        "KARFREITAG": "GOOD FRIDAY",
        "OSTERMONTAG": "EASTER MONDAY",
        "TAG_DER_ARBEIT": "LABOR DAY",
        "CHRISTIHIMMELFAHRT": "ASCENSION DAY",
        "PFINGSTMONTAG": "WHIT MONDAY",
        "DEUTSCHEEINHEIT": "DAY OF GERMAN UNITY",
        "ERSTERWEIHNACHTSFEIERTAG": "CHRISTMAS DAY",
        "ZWEITERWEIHNACHTSFEIERTAG": "BOXING DAY"
      },
      "workdays": "Working days",
      "openQuiz": "Open quiz",
      "closeQuiz": "Close quiz",
      "which": "Which holiday is on",
      "answer": "Scratch for answer",
      "mon": "Mon",
      "tue": "Tue",
      "wed": "Wed",
      "thur": "Thur",
      "fri": "Fri",
      "sat": "Sat",
      "sun": "Sun"
    },
    "guestbook": {
      "createComment": "Create Comment",
      "thanks": "Thanks for leaving a comment",
      "save": "Save"
    },
    "charts": {
      "monthlyConsumption": "Monthly consumption",
      "yearlyConsumption": "Yearly consumption",
      "procentualConsumption": "Procentual consumption",
      "electricity": "Electricity",
      "water": "Water",
      "gas": "Gas",
      "wholeYear": "Whole year",
      "month": "Month",
      "save": "Save",
      "deleteUser": "Delete user",
      "editUser": "Edit user",
      "addUser": "Add user",
      "delete": "Delete",
      "cancel": "Cancel",
      "reallyDelete": "Do you really want to delete this user?",
      "user": "User",
      "image": "image",
      "upload": "Upload",
      "mustUploadImage": "You must upload an image",
      "mustEnterName": "You must enter a name",
      "nameExist": "This name already exist",
      "imageCropper": {
        "headline": "Update user image",
        "uploadImage": "Upload new image",
        "saveImage": "Save cropped image",
        "reset": "Reset"
      }
    },
    "jokes": {
      "auth": "Authentication and authorization",
      "stripe": "Stripe payment",
      "text1": "I wrote a book with jokes, in pairs of german and croatian language. You can read some of them when you login down here. You can create an account by yourself or just use",
      "text2": "for email and",
      "text3": "for password.",
      "text4": "There is also a form for ordering the book using the",
      "text5": "stripe service",
      "text6": "But because this is only a demonstration website you can not really order the book with this form. If you want to try out the functionality just enter any address, one of the following test cards provided from the stripe service to simulate a payment.",
      "paymentSucceeds": "Payment succeeds",
      "paymentRequiresAuth": "Payment requires authentication",
      "paymentDeclined": "Payment is declined",
      "text7": "Then any future date as expiration and any 3-digit number as CVC.",
      "text8": "If you really want to read my book, you can order it on amazon with",
      "text9": "this",
      "text10": "link.",
      "copied": "Copied!",
      "password6Char": "The password must be at least 6 characters long",
      "passwordsDontMatch": "Passwords do not match!",
      "loginToRead": "Login to read some funny jokes",
      "unknownError": "An unknown error occured!",
      "requestBlocked": "We have blocked all requests from this device due to unusual activity. Try again in 5 minutes.",
      "emailExists": "The email address is already in use by another account.",
      "invalidCredentials": "This email is not registered or the password is incorrect.",
      "password": "Password",
      "login": "Login",
      "noAccount": "Don't have an account?",
      "signUp": "Sign Up",
      "confirmPassword": "Confirm password",
      "haveAccount": "Already have an account?",
      "logout": "Logout",
      "orderBook": "Order the book for only",
      "street": "Street:",
      "zipCode": "Zip code:",
      "city": "City:",
      "payAmount": "PAY 14.98 Euro",
      "stripNotLoaded": "The Stripe payment system could not be loaded.",
      "congratulation": "Congratualtion!",
      "bookOrdered": "You ordered the book.",
      "noSuccess": "The payment could not be made!",
      "tryAgain": "Try again",
      "paymentFailed": "The payment with PayPal failed.",
      "clickToRotate": "Click on book to rotate",
      "textToSpeech": "The TextToSpeech API used here is a free demo version and only supports 10 minutes of audio per month. After that, the API stops working. But that should be enough for demo purposes."
    },
    "games": {
      "connectFour": "Connect 4",
      "memoQuiz": "Memo quiz",
      "jigsaw": "Jigsaw",
      "opponent": "Opponent",
      "human": "Human",
      "turn": "'s turn",
      "newGame": "New game",
      "reset": "Reset",
      "wins": "wins",
      "draw": "The game ends in a draw",
      "notMyApp1": "* This puzzle app is not my own work. I found it ",
      "notMyApp2": "here",
      "notMyApp3": " on the internet. But I like it so much that I included it.",
      "knowledgeQuiz": "Knowledge quiz",
      "evaluation": "Evaluation",
      "right": "Right",
      "wrong": "Wrong",
      "total": "Total",
      "quit": "Quit",
      "rightAnswer": "Correct answer!",
      "continue": "Continue",
      "wrongAnswer": "Wrong answer!",
      "rightAnswerIs": "Correct answer is:",
      "quizIsOver": "The quiz is over.",
      "dontFeelLikeDoingQuiz": "Well, you don't feel like doing a quiz?",
      "evaluation100": "Perfect! You answered everything correctly - it couldn't be better. Top performance!",
      "evaluation80": "Well done! You got almost everything right - that shows that you're doing really well.",
      "evaluation60": "Well done! A solid performance, but there is still room for improvement.",
      "evaluation40": "You've already got a lot right, but there's still more to come. Practice makes perfect!",
      "evaluation20": "The beginning has been made, but there is still a lot to learn. Keep at it, you can do it!",
      "evaluation0": "Not your day? No problem - everyone starts small. Take it as an opportunity to improve!",
      "repeatQuiz": "Repeat the quiz",
      "howAnswered": "Of {{all}} questions, you answered <span class='text-green-800'>{{rightAnswers}}</span> correctly and <span class='text-red-800'>{{wrongAnswers}}</span> incorrectly.",
      "selectGame": "Select a game:",
      "gameIsOver": "The game is over.",
      "scored": "You have scored {{score}} points!",
      "startGame": "Start game",
      "score": "Score:",
      "easy": "Easy",
      "medium": "Medium",
      "difficult": "Difficult",
      "noEntriesYet": "There are no entries yet.",
      "welcomeToYahtzee": "Welcome to Yahtzee!",
      "selectPlayers": "Please select the players.",
      "addPlayer": "Add Player",
      "addComputer": "Add Computer",
      "namesNotEmpty": "The player names cannot be empty. Please enter names or delete the players without names.",
      "roll": "Roll",
      "turn2": "'s turn",
      "rollNumber": "Roll number",
      "selectFieldToEnter": "Select the field to enter",
      "gameOverHopeHadFun": "The game is over. I hope you had fun.",
      "hereResult": "Here is the result:",
      "points": "points",
      "ones": "Ones",
      "twos": "Twos",
      "threes": "Threes",
      "fours": "Fours",
      "fives": "Fives",
      "sixes": "Sixes",
      "sum": "Sum",
      "bonus": "Bonus",
      "threeInARow": "3 in a row",
      "fourInARow": "4 in a row",
      "fullHouse": "Full House",
      "smallStraight": "Small straight",
      "largeStraight": "Large staright",
      "chance": "Chance",
      "yahtzee": "Yahtzee",
      "total2": "Total",
      "waitForNewGame": "There is currently a game in progress and you have to wait until a new game starts.",
      "currentlyPlaying": "Currently playing:",
      "back": "Back",
      "enterName": "Please enter your name:",
      "nameNotEmpty": "The name cannot be empty.",
      "nameAlreadyTaken": "This name is already taken.",
      "registeredPlayers": "The following players are registered:",
      "you": "(You)",
      "waitForOtherPlayers": "Waiting for other players...",
      "lokalGame": "Local game",
      "lokalGameText": " against another player or the computer on the same computer/smartphone",
      "remoteGame": "Remote Game",
      "remoteGameText": " against another player on another computer/smartphone",
      "endGame": "Quit Game",
      "hasEndGame": " has finished the game",
      "player1": "Player 1",
      "player2": "Player 2"
    },
    "weather": {
      "useLocation": "Use location",
      "enterCity": "Enter city",
      "getLocation": "Get location",
      "selectCountry": "Select country",
      "worldWide": "Worldwide",
      "searchCountry": "Search country",
      "precipitation": "Precipitation",
      "humidity": "Humidity",
      "wind": "Wind",
      "weather": "Weather",
      "temperature": "Temperature",
      "errorOnPosition": "Error retrieving position",
      "geoLocationNotSupported": "Geolocation is not supported by this browser.",
      "errorOnAddress": "Error retrieving address.",
      "errorOnSearch": "Error while searching. City not found or no weather data for this city."
    }
  },
  "pageNotFound": {
    "error": "The requested page was not found!",
    "goToHomepage": "Go to Homepage"
  },
  "httpError": {
    "httpErrorOccurs": "A data transfer error occurred. Please check your internet connection and try again.",
    "contactMeVia": "If the error persists, please contact me at",
    "httpErrorOccurs2": "A data transfer error occurred.",
    "emailWasSendToMe": "An email has been sent to me. I will take care of the error immediately.",
    "checkInternetConnection": "Please also check your internet connection. This may be the cause.",
    "errorOccurs": "An error has occurred!"
  }
}
